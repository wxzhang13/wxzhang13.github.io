<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wxzhang13.github.io</id>
    <title>PureWhite</title>
    <updated>2021-08-18T18:04:59.348Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wxzhang13.github.io"/>
    <link rel="self" href="https://wxzhang13.github.io/atom.xml"/>
    <subtitle>念念不忘、必有回响</subtitle>
    <logo>https://wxzhang13.github.io/images/avatar.png</logo>
    <icon>https://wxzhang13.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, PureWhite</rights>
    <entry>
        <title type="html"><![CDATA[函数]]></title>
        <id>https://wxzhang13.github.io/post/han-shu/</id>
        <link href="https://wxzhang13.github.io/post/han-shu/">
        </link>
        <updated>2021-08-18T16:28:50.000Z</updated>
        <content type="html"><![CDATA[<p>什么是函数？</p>
<p>函数就是个黑匣子，他能够接受输入参数，然后执行特定的任务以完成特定的功能，最后生成输出，也就是返回值的过程。其中，输入参数和输出（返回值）是可选的，可有可无。</p>
<p>为什么需要函数？</p>
<p>1 复用代码</p>
<p>如果在程序中需要多次完成某个特定的功能，我们无需把这个特定功能的相关代码在多个地方编写多次，我们可以把这个特定功能的相关代码定义成函数，然后在多个地方调用该函数，每次调用都会把函数对应的相关代码执行一遍</p>
<p>2 隐藏实现细节</p>
<p>函数就是个黑匣子，将实现细节隐藏起来，很多时候我们无需关注函数的实现细节，只需关注接收输入参数及生成的输出（返回值）就可以呢</p>
<p>3 提高可维护性</p>
<p>把完成特定功能的代码定义成函数后，如果需要对这段代码进行修改，只需要在一个地方进行修改就可以挺高程序的可维护性。否则，你需要找到这段代码的多个地方，每个地方都要进行同样的修改，费事费力还容易出错。</p>
<p>4 提高可读性，便于调试</p>
<p>每个函数都对应一段完成特定功能的代码，提高了程序的可读性，也便于程序调试</p>
<p>如何定义函数？</p>
<pre><code>def 函数名([形参]):

    函数体
</code></pre>
]]></content>
    </entry>
</feed>